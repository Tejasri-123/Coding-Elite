class Pair{
    int node,parent;
    Pair(int node,int parent){
        
        this.node = node;
        this.parent = parent;
    }
}
class Solution {
    
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean[] visit  = new boolean[V];
        for(int i=0;i<V;i++){
            if(!visit[i]){
                if(dfs(i,-1,adj,visit)) return true;
            }
        }
        return false;
        
        
        // Code here
    }
    boolean dfs(int s,int parent,ArrayList<ArrayList<Integer>> adj,boolean[] visit){
        visit[s]=true;
        for(int neigh : adj.get(s)){
            if(!visit[neigh]){
                if(dfs(neigh,s,adj,visit)) return true;
                
            }
            else if(neigh!=parent) return true;
                
        }
        return false;
    }
    
    
}
