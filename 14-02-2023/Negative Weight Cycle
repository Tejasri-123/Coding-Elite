class Solution
{
    public int isNegativeWeightCycle(int n, int[][] edges)
    {
        int[] dist = new int[n];
        Arrays.fill(dist,Integer.MAX_VALUE);
        dist[0]=0;
        for(int i =0 ;i<n-1;i++){
            for(int j=0;j<edges.length;j++){
                int src = edges[j][0];
                int dest = edges[j][1];
                int weight = edges[j][2];
                if(dist[src]!=Integer.MAX_VALUE && dist[src]+weight < dist[dest]){
                    dist[dest] = dist[src]+weight;
                }
            }
        }
        for(int i =0 ;i<n-1;i++){
            for(int j=0;j<edges.length;j++){
                int src = edges[j][0];
                int dest = edges[j][1];
                int weight = edges[j][2];
                if(dist[src]!=Integer.MAX_VALUE && dist[src]+weight < dist[dest]){
                    return 1;
                }
            }
        }
        return 0;
        
    }
}
